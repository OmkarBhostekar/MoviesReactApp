{"version":3,"sources":["axios.js","homepage/Row.js","requests.js","homepage/Banner.js","homepage/Home.js","movie/MovieDetail.js","App.js","reportWebVitals.js","index.js"],"names":["instance","axios","create","baseURL","Row","title","fetchUrl","mType","history","useHistory","useState","movies","setMovies","useEffect","a","console","log","get","request","data","results","fetchData","className","map","movie","src","poster_path","alt","name","onClick","type","media_type","push","id","redirectToDetail","API_KEY","requests","fetchBanner","fetchTrending","fetchNetflixOriginals","fetchTopRated","fetchActionMovies","fetchComedyMovies","fetchHorrorMovies","fetchRomanceMovies","fetchDocumentaries","fetchPopulerTv","fetchTopRatedTv","Banner","str","n","setMovie","random","Math","floor","length","style","backgroundSize","backgroundImage","backdrop_path","backgroundPosition","original_title","overview","substr","Home","getDirector","crew","director","forEach","crewmate","job","getWriters","writers","getRunTime","mins","hours","round","min","MovieDetail","useParams","image_base_url","fetchCredits","fetchImages","movieDetail","setMovieDetail","credit","setCredit","images","setImages","trailerUrl","setTrailerUrl","searchTrailer","movieTrailer","then","url","urlParams","URLSearchParams","URL","search","catch","err","credits","imageResponse","backdrops","window","scrollTo","release_date","runtime","tagline","budget","vote_average","class","vote_count","genres","genre","Chip","size","color","label","cast","actor","profile_path","image","file_path","videoId","opts","height","width","playerVars","autoplay","App","exact","path","component","from","to","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.e0afefac.chunk.js","sourcesContent":["import axios from \"axios\"\r\n\r\nconst instance = axios.create({\r\n    baseURL: \"https://api.themoviedb.org/3\"\r\n})\r\n\r\nexport default instance","import React, { useEffect, useState } from 'react'\r\nimport { Redirect, useHistory } from 'react-router-dom';\r\nimport axios from \"../axios\";\r\nimport \"../homepage/Row.css\"\r\n\r\nconst image_base_url = \"https://image.tmdb.org/t/p/original\"\r\n\r\nfunction Row({ title, fetchUrl, mType }) {\r\n\r\n    const history = useHistory();\r\n\r\n    const [movies, setMovies] = useState([])\r\n\r\n    useEffect(() => {\r\n        async function fetchData() {\r\n            console.log(fetchUrl);\r\n            const request = await axios.get(fetchUrl)\r\n            setMovies(request.data.results)\r\n            console.log(request.data.results);\r\n            return request\r\n        }\r\n        fetchData()\r\n    }, [fetchUrl])\r\n\r\n    function redirectToDetail(movie) {\r\n        let type = 'movie'\r\n        if (mType === 'both') {\r\n            type = movie.media_type\r\n        }else{\r\n            type = mType\r\n        }\r\n        history.push( type === 'movie' ? `/movie/${movie?.id}` : `/tv/${movie?.id}`)\r\n        console.log(`clicked on ${movie?.id}`);\r\n    };\r\n \r\n    return ( <div className = \"row\" > { /* title */ }\r\n        <h2 className = \"row_title\" > { title } </h2>\r\n\r\n        { /* container => posters */ } \r\n        <div className = \"row_posters\" > { /* movie posters */ }\r\n\r\n        {\r\n            movies.map(movie => ( \r\n            // <img className = { `poster ${isLargePoster && \"large_poster\"}` }\r\n            <img className = { `poster large_poster` }\r\n                key = { movie.id }\r\n                // src = { `${image_base_url}${isLargePoster ? movie.poster_path : movie.backdrop_path}` }\r\n                src = { `${image_base_url}${movie.poster_path}` }\r\n                alt = { movie.name }\r\n                onClick = { () => redirectToDetail(movie) }\r\n                />\r\n            ))\r\n        } </div> \r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Row","const API_KEY = \"5e08ba1c1a1dcf7f83c837a7b9db7776\"\r\n\r\nconst requests = {\r\n    fetchBanner: `/tv/popular?api_key=${API_KEY}&language=en-US&with_network=213`,\r\n    fetchTrending: `/trending/all/week?api_key=${API_KEY}&language=en-US`,\r\n    fetchNetflixOriginals: `/discover/tv?api_key=${API_KEY}&with_network=213`,\r\n    fetchTopRated: `/movie/top_rated?api_key=${API_KEY}&language=en-US`,\r\n    fetchActionMovies: `/discover/movie?api_key=${API_KEY}&with_genres=28`,\r\n    fetchComedyMovies: `/discover/movie?api_key=${API_KEY}&with_genres=35`,\r\n    fetchHorrorMovies: `/discover/movie?api_key=${API_KEY}&with_genres=27`,\r\n    fetchRomanceMovies: `/discover/movie?api_key=${API_KEY}&with_genres=10749`,\r\n    fetchDocumentaries: `/discover/movie?api_key=${API_KEY}&with_genres=99`,\r\n    fetchPopulerTv: `/tv/popular?api_key=${API_KEY}&language=en-US`,\r\n    fetchTopRatedTv: `/tv/top_rated?api_key=${API_KEY}&language=en-US`\r\n}\r\n\r\nexport default requests","import React,{useState, useEffect} from 'react'\r\nimport { useHistory } from 'react-router-dom';\r\nimport YouTube from 'react-youtube';\r\nimport axios from \"../axios\";\r\nimport requests from '../requests';\r\nimport \"./Banner.css\"\r\n\r\nfunction Banner() {\r\n\r\n    const [movie, setMovie] = useState([])\r\n    const history = useHistory()\r\n\r\n    useEffect(() => {\r\n        async function fetchData(){\r\n            const request = await axios.get(requests.fetchBanner)\r\n            const random = Math.floor(Math.random()*request.data.results.length -1)\r\n            setMovie(request.data.results[random])\r\n            console.log(request.data.results[random]);\r\n        }\r\n        fetchData()\r\n    }, [])\r\n\r\n    function redirectToDetail(id) {\r\n        history.push( `/tv/${id}`)\r\n        console.log(`clicked on ${id}`);\r\n    };\r\n\r\n    function truncate(str,n) {\r\n        return str?.length > n ? str.substr(0,n-1) + \"...\" : str\r\n    }\r\n\r\n    return ( \r\n    <header className=\"banner\"\r\n        style={{\r\n            backgroundSize: \"cover\",\r\n            backgroundImage: `url(\r\n                \"https://image.tmdb.org/t/p/original${movie?.backdrop_path}\"\r\n            )` ,\r\n            backgroundPosition: \"center center\"\r\n        }}\r\n    >\r\n        <div className=\"banner_content\">\r\n        {/* title */}\r\n        <h1 className=\"banner_title\">{movie?.title || movie?.name || movie?.original_title}</h1>\r\n        {/* div 2 buttons */}\r\n        <div className=\"banner_buttons\">\r\n            <button className=\"banner_button btn-play\">Play</button>\r\n            <button className=\"banner_button\" onClick={ () => redirectToDetail(movie?.id)}>View</button>\r\n        </div>\r\n        {/* description */}\r\n        <h1 className=\"banner_description\">{truncate(movie?.overview,300)}</h1>\r\n\r\n        </div>\r\n        <div className=\"banner--fadebottom\"></div>\r\n    </header>\r\n    )\r\n}\r\n\r\nexport default Banner","import React from 'react'\r\nimport Row from './Row';\r\nimport Banner from './Banner';\r\nimport Nav from '../Nav';\r\nimport requests from '../requests';\r\nimport '../homepage/Home.css';\r\nfunction Home() {\r\n    return (\r\n        <div className=\"App\">\r\n        {/* <Nav/> */}\r\n        <Banner/>\r\n        {/* <Row title=\"Netflix Originals\" fetchUrl={requests.fetchNetflixOriginals}/> */}\r\n        <Row title=\"Trending Now\" fetchUrl={requests.fetchTrending} mType='both'/>\r\n        <Row title=\"Popular TV Shows\" fetchUrl={requests.fetchPopulerTv} mType='tv'/>\r\n        <Row title=\"Top Rated Movies\" fetchUrl={requests.fetchTopRated} mType='movie'/>\r\n        <Row title=\"Top Rated TV Shows\" fetchUrl={requests.fetchTopRatedTv} mType='tv'/>\r\n        <Row title=\"Action Movies\" fetchUrl={requests.fetchActionMovies} mType='movie'/>\r\n        <Row title=\"Comedy Movies\" fetchUrl={requests.fetchComedyMovies} mType='movie'/>\r\n        <Row title=\"Horror Movies\" fetchUrl={requests.fetchHorrorMovies} mType='movie'/>\r\n        <Row title=\"Romance Movies\" fetchUrl={requests.fetchRomanceMovies} mType='movie'/>\r\n        {/* <Row title=\"Documentaries\" fetchUrl={requests.fetchDocumentaries} mType='movie'/> */}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Home\r\n","import { useEffect, React, useState} from 'react'\r\nimport { useParams } from 'react-router-dom'\r\nimport YouTube from 'react-youtube';\r\nimport axios from \"../axios\";\r\nimport './MovieDetail.css';\r\nimport movieTrailer from 'movie-trailer';\r\nimport { Chip } from '@material-ui/core';\r\nfunction MovieDetail() {\r\n\r\n    let { id } = useParams()\r\n\r\n    const image_base_url = \"https://image.tmdb.org/t/p/original\"\r\n\r\n\r\n    const fetchUrl = `https://api.themoviedb.org/3/movie/${id}?api_key=5e08ba1c1a1dcf7f83c837a7b9db7776&language=en-US`\r\n    const fetchCredits = `https://api.themoviedb.org/3/movie/${id}/credits?api_key=5e08ba1c1a1dcf7f83c837a7b9db7776&language=en-US`\r\n    const fetchImages = `https://api.themoviedb.org/3/movie/${id}/images?api_key=5e08ba1c1a1dcf7f83c837a7b9db7776`\r\n\r\n    const [movieDetail, setMovieDetail] = useState()\r\n    const [credit, setCredit] = useState()\r\n    const [images, setImages] = useState()\r\n    const [trailerUrl, setTrailerUrl] = useState()\r\n\r\n    useEffect(() => {\r\n        window.scrollTo(0,0)\r\n        async function fetchData() {\r\n            console.log(fetchUrl);\r\n            const request = await axios.get(fetchUrl);\r\n            const credits = await axios.get(fetchCredits);\r\n            const imageResponse = await axios.get(fetchImages);\r\n            setMovieDetail(request.data)\r\n            searchTrailer(request.data.original_title || \"\")\r\n            setCredit(credits.data)\r\n            setImages(imageResponse.data.backdrops)\r\n            console.log(request.data);\r\n            console.log(credits.data);\r\n            console.log(imageResponse.data.backdrops);\r\n            return request\r\n        }\r\n        fetchData()\r\n    }, [fetchUrl])\r\n\r\n    function searchTrailer(name) {\r\n        movieTrailer(name || \"\").then(\r\n            url => {\r\n                const urlParams = new URLSearchParams(new URL(url).search)\r\n                setTrailerUrl(urlParams.get('v') || \"\")\r\n                console.log(urlParams.get('v'));\r\n            })\r\n            .catch(err => console.log(err))\r\n    }\r\n\r\n    const opts = {\r\n        height: \"600\",\r\n        width: \"100%\",\r\n        playerVars: {\r\n            autoplay: 1\r\n        }\r\n    }\r\n\r\n    return (\r\n        <main>\r\n            <section className=\"movie-detail\">\r\n                <div className=\"movie-metadeta\">\r\n                    <img src={ `${image_base_url}${movieDetail?.poster_path}` } alt=\"\" className=\"movie-poster\"/>\r\n                        <h2>{movieDetail?.original_title}</h2>\r\n                        <div className=\"movie-info\">\r\n                        <h6 className=\"info_field\">Release Date</h6>\r\n                        <h4>{`${movieDetail?.release_date}`}</h4>\r\n                        <h6 className=\"info_field\">Runtime</h6>\r\n                        <h4>{`${getRunTime(movieDetail?.runtime)}`}</h4>\r\n                        <h6 className=\"info_field\">Tagline</h6>\r\n                        <h4>{`${movieDetail?.tagline}`}</h4>\r\n                        <h6 className=\"info_field\">Budget</h6>\r\n                        <h4>{`${movieDetail?.budget}`}</h4>\r\n                        <h6 className=\"info_field\">Director</h6>\r\n                        <h4>{`${getDirector(credit?.crew)}`}</h4>\r\n                        <h6 className=\"info_field\">Writers</h6>\r\n                        <h4>{`${getWriters(credit?.crew)}`}</h4>\r\n                    </div>\r\n                </div>\r\n                <div className=\"movie-overview\">\r\n                    <div className=\"movie-numbers\">\r\n                        <h1>Rating</h1>\r\n                        <h3>{movieDetail?.vote_average}/<span className=\"rating_number\">10 (<span class=\"vote-count\">{movieDetail?.vote_count}</span>)</span></h3>\r\n                        <h2>Genre</h2>\r\n                        {\r\n                            movieDetail?.genres.map( genre =>\r\n                                <Chip size=\"small\" className=\"genre-chip\" color=\"white\" label={genre.name}/>\r\n                            )\r\n                        }\r\n                    </div>\r\n                    <div className=\"storyline\">\r\n                        <h1>Storyline</h1>\r\n                        <h3>{movieDetail?.overview}</h3>\r\n                    </div>\r\n                    <div className=\"cast-title\">\r\n                        <h1>Cast</h1>   \r\n                    </div>\r\n                    <div className=\"cast\">\r\n                    {\r\n                        credit?.cast.map(actor => (\r\n                            <div className=\"actor\">\r\n                                <img src={`${image_base_url}${actor.profile_path}`} alt=\"\"/>\r\n                                <h4>{actor.name}</h4>\r\n                            </div>\r\n                        ))\r\n                    }\r\n                    </div>\r\n                </div>\r\n                <div className=\"movie-images\">\r\n                    {\r\n                        images?.map( image => {\r\n                            console.log(`${image_base_url}${image?.file_path}`);\r\n                            return <img src={`${image_base_url}${image.file_path}`} \r\n                            key = {image.file_path}\r\n                            alt=\"\" className=\"movie-image\"/>\r\n                        })\r\n                    }\r\n                </div>\r\n            </section>\r\n            <div className=\"yt\">\r\n        {trailerUrl && <YouTube videoId={trailerUrl} opts={opts}/>}\r\n            </div>\r\n        </main>\r\n    )\r\n}\r\n\r\nfunction getDirector(crew) {\r\n    let director = []\r\n    crew?.forEach(crewmate => {\r\n        if (crewmate?.job === 'Director') {\r\n            director.push(crewmate?.name)\r\n        }\r\n    });\r\n    return director\r\n}\r\n\r\nfunction getWriters(crew) {\r\n    let writers = []\r\n    crew?.forEach(crewmate => {\r\n        if (crewmate?.job === 'Writer') {\r\n            writers.push(crewmate?.name)\r\n        }\r\n    })\r\n    return writers\r\n}\r\n\r\nfunction getRunTime(mins) {\r\n    let hours = Math.round(mins/60);\r\n    let min = mins%60;\r\n    return `${hours}h ${min}mins`\r\n}\r\n\r\nexport default MovieDetail\r\n","import './App.css';\nimport { BrowserRouter as Router,Switch, Route, Redirect} from 'react-router-dom';\nimport Home from './homepage/Home';\nimport MovieDetail from './movie/MovieDetail';\nimport Nav from './Nav'\n\nfunction App() {\n    return ( \n    \n        // <MovieDetail/>\n            <div className=\"App\">\n            {/* <Nav/> */}\n            <Router>\n                <Switch>   \n                    <Route exact path = \"/\" component={Home} />\n                    <Route path=\"/movie/:id\" component={MovieDetail}/>\n                    <Redirect from=\"/*\" to='/' exact />\n                </Switch>\n            </Router>\n            </div>\n    )\n}\n\nexport default App;","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}