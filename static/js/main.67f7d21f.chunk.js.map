{"version":3,"sources":["axios.js","Row.js","requests.js","Banner.js","App.js","reportWebVitals.js","index.js"],"names":["instance","axios","create","baseURL","Row","title","fetchUrl","isLargePoster","useState","movies","setMovies","useEffect","a","console","log","get","request","data","results","fetchData","className","map","movie","src","poster_path","backdrop_path","alt","name","id","API_KEY","requests","fetchBanner","fetchTrending","fetchNetflixOriginals","fetchTopRated","fetchActionMovies","fetchComedyMovies","fetchHorrorMovies","fetchRomanceMovies","fetchDocumentaries","Banner","str","n","setMovie","random","Math","floor","length","style","backgroundSize","backgroundImage","backgroundPosition","original_title","overview","substr","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.67f7d21f.chunk.js","sourcesContent":["import axios from \"axios\"\r\n\r\nconst instance = axios.create({\r\n    baseURL: \"https://api.themoviedb.org/3\"\r\n})\r\n\r\nexport default instance","import React, { useEffect,useState } from 'react'\r\nimport axios from \"./axios\";\r\nimport \"./Row.css\"\r\n\r\nconst image_base_url = \"https://image.tmdb.org/t/p/original\"\r\n\r\nfunction Row({title, fetchUrl, isLargePoster}) {\r\n\r\n    const [movies, setMovies] = useState([])\r\n\r\n    useEffect(() => {\r\n        async function fetchData() {\r\n            console.log(fetchUrl);\r\n            const request = await axios.get(fetchUrl)\r\n            setMovies(request.data.results)\r\n            console.log(request.data.results);\r\n            return request\r\n        }\r\n        fetchData()\r\n    }, [fetchUrl])\r\n\r\n    return (\r\n        <div className=\"row\">\r\n            {/* title */}\r\n            <h2>{title}</h2>\r\n             \r\n            {/* container => posters */}\r\n            <div className=\"row_posters\">\r\n                {/* movie posters */}\r\n\r\n                {movies.map( movie => (\r\n                    <img className={`poster ${isLargePoster && \"large_poster\"}`}\r\n                    key={movie.id}\r\n                    src={`${image_base_url}${isLargePoster ? movie.poster_path : movie.backdrop_path}`} alt={movie.name}/>\r\n                ))}\r\n\r\n            </div>\r\n\r\n\r\n\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Row\r\n","const API_KEY = \"5e08ba1c1a1dcf7f83c837a7b9db7776\"\r\n\r\nconst requests = {\r\n    fetchBanner: `/tv/popular?api_key=${API_KEY}&language=en-US&with_network=213`,\r\n    fetchTrending: `/trending/all/week?api_key=${API_KEY}&language=en-US`,\r\n    fetchNetflixOriginals: `/discover/tv?api_key=${API_KEY}&with_network=213`,\r\n    fetchTopRated: `/movie/top_rated?api_key=${API_KEY}&language=en-US`,\r\n    fetchActionMovies: `/discover/movie?api_key=${API_KEY}&with_genres=28`,\r\n    fetchComedyMovies: `/discover/movie?api_key=${API_KEY}&with_genres=35`,\r\n    fetchHorrorMovies: `/discover/movie?api_key=${API_KEY}&with_genres=27`,\r\n    fetchRomanceMovies: `/discover/movie?api_key=${API_KEY}&with_genres=10749`,\r\n    fetchDocumentaries: `/discover/movie?api_key=${API_KEY}&with_genres=99`,\r\n}\r\n\r\nexport default requests","import React,{useState, useEffect} from 'react'\r\nimport axios from \"./axios\";\r\nimport requests from './requests';\r\nimport \"./Banner.css\"\r\n\r\nfunction Banner() {\r\n\r\n    const [movie, setMovie] = useState([])\r\n\r\n    useEffect(() => {\r\n        async function fetchData(){\r\n            const request = await axios.get(requests.fetchBanner)\r\n            const random = Math.floor(Math.random()*request.data.results.length -1)\r\n            setMovie(request.data.results[random])\r\n            console.log(request.data.results[random]);\r\n        }\r\n        fetchData()\r\n    }, [])\r\n\r\n    function truncate(str,n) {\r\n        return str?.length > n ? str.substr(0,n-1) + \"...\" : str\r\n    }\r\n\r\n    return ( \r\n    <header className=\"banner\"\r\n        style={{\r\n            backgroundSize: \"cover\",\r\n            backgroundImage: `url(\r\n                \"https://image.tmdb.org/t/p/original/${movie?.backdrop_path}\"\r\n            )` ,\r\n            backgroundPosition: \"center center\"\r\n        }}\r\n    >\r\n        <div className=\"banner_content\">\r\n        {/* title */}\r\n        <h1 className=\"banner_title\">{movie?.title || movie?.name || movie?.original_title}</h1>\r\n        {/* div 2 buttons */}\r\n        <div className=\"banner_buttons\">\r\n            <button className=\"banner_button\">Play</button>\r\n            <button className=\"banner_button\">My List</button>\r\n        </div>\r\n        {/* description */}\r\n        <h1 className=\"banner_description\">{truncate(movie?.overview,300)}</h1>\r\n\r\n        </div>\r\n        <div className=\"banner--fadebottom\"></div>\r\n    </header>\r\n    )\r\n}\r\n\r\nexport default Banner","import './App.css';\nimport Row from './Row';\nimport Banner from './Banner';\nimport requests from './requests';\n\nfunction App() {\n    return (\n    <div className=\"App\" >\n\n        <Banner/>\n\n        {/* <Row title=\"Netflix Originals\" fetchUrl={requests.fetchNetflixOriginals}/> */}\n        <Row title=\"Trending Now\" fetchUrl={requests.fetchTrending} isLargePoster/>\n        <Row title=\"Top Rated\" fetchUrl={requests.fetchTopRated}/>\n        <Row title=\"Action Movies\" fetchUrl={requests.fetchActionMovies}/>\n        <Row title=\"Comedy Movies\" fetchUrl={requests.fetchComedyMovies}/>\n        <Row title=\"Horror Movies\" fetchUrl={requests.fetchHorrorMovies}/>\n        <Row title=\"Romance Movies\" fetchUrl={requests.fetchRomanceMovies}/>\n        <Row title=\"Documentaries\" fetchUrl={requests.fetchDocumentaries}/>\n    </div>\n    );\n} \n\nexport default App;","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}